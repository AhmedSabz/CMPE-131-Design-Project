{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishi\\\\SJSU\\\\3rd Year (Spring Semester)\\\\CMPE 131\\\\Club Matching Website\\\\club-matching-website\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Survey from './components/Survey';\nimport Navigation from './components/Navigation';\nimport Dashboard from './components/Dashboard';\nimport UserManagement from './components/AccountManagement';\nimport ClubManagement from './components/ClubManagement';\nimport Home from './components/Home';\nimport Database from './components/Database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userData, setUserData] = useState(null); // Store user data when logged in\n  const [clubs, setClubs] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [showSurvey, setShowSurvey] = useState(false);\n  const handleLogin = userData => {\n    setIsLoggedIn(true);\n    console.log(\"true\");\n    setUserData(userData); // Set user data after successful login\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUserData(null); // Clear user data on logout\n  };\n  const handleUserRegistration = newUserData => {\n    // Add the new user data to the database component\n    setUserData(prevData => {\n      if (prevData === null) {\n        return [newUserData]; // If prevData is null, return a new array with newUserData\n      } else {\n        return [...prevData, newUserData]; // Otherwise, spread prevData and add newUserData\n      }\n    });\n  };\n  const handleSurveySubmit = answers => {\n    if (answers.interest1 !== '' && answers.interest2 !== '' && answers.interest3 !== '') {\n      const recommendedClubs = [{\n        id: 1,\n        name: 'Chess Club',\n        category: 'Strategy',\n        description: 'A club for chess enthusiasts.'\n      }, {\n        id: 2,\n        name: 'Art Club',\n        category: 'Creative',\n        description: 'A club for art lovers.'\n      }\n      // Add more recommended clubs based on the survey answers\n      ];\n      setClubs(recommendedClubs);\n      setShowSurvey(false); // Hide the survey after submission\n    } else {\n      alert(\"Please Provide Three Interests\");\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isLoggedIn: isLoggedIn,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/account_dashboard\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/club_registration\",\n          element: /*#__PURE__*/_jsxDEV(ClubManagement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user_registration\",\n          element: /*#__PURE__*/_jsxDEV(UserManagement, {\n            onLogin: handleLogin,\n            onUserRegistration: handleUserRegistration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/club_matching_survey\",\n          element: /*#__PURE__*/_jsxDEV(Survey, {\n            onSurveySubmit: handleSurveySubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/account_management\",\n          element: /*#__PURE__*/_jsxDEV(Database, {\n            userData: userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ljwQ3piCHn1wdq6ikxt+qOnpdwE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Survey","Navigation","Dashboard","UserManagement","ClubManagement","Home","Database","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","userData","setUserData","clubs","setClubs","selectedCategory","setSelectedCategory","showSurvey","setShowSurvey","handleLogin","console","log","handleLogout","handleUserRegistration","newUserData","prevData","handleSurveySubmit","answers","interest1","interest2","interest3","recommendedClubs","id","name","category","description","alert","children","className","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","onUserRegistration","onSurveySubmit","_c","$RefreshReg$"],"sources":["C:/Users/rishi/SJSU/3rd Year (Spring Semester)/CMPE 131/Club Matching Website/club-matching-website/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Survey from './components/Survey';\nimport Navigation from './components/Navigation';\nimport Dashboard from './components/Dashboard';\nimport UserManagement from './components/AccountManagement';\nimport ClubManagement from './components/ClubManagement';\nimport Home from './components/Home';\nimport Database from './components/Database';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userData, setUserData] = useState(null); // Store user data when logged in\n  const [clubs, setClubs] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [showSurvey, setShowSurvey] = useState(false);\n\n  const handleLogin = (userData) => {\n    setIsLoggedIn(true);\n    console.log(\"true\");\n    setUserData(userData); // Set user data after successful login\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUserData(null); // Clear user data on logout\n  };\n\n  const handleUserRegistration = (newUserData) => {\n    // Add the new user data to the database component\n    setUserData(prevData => {\n      if (prevData === null) {\n        return [newUserData]; // If prevData is null, return a new array with newUserData\n      } else {\n        return [...prevData, newUserData]; // Otherwise, spread prevData and add newUserData\n      }\n    });\n  };\n  \n\n  const handleSurveySubmit = (answers) => {\n    if (answers.interest1 !== '' && answers.interest2 !== '' && answers.interest3 !== '') {\n      const recommendedClubs = [\n        { id: 1, name: 'Chess Club', category: 'Strategy', description: 'A club for chess enthusiasts.' },\n        { id: 2, name: 'Art Club', category: 'Creative', description: 'A club for art lovers.' },\n        // Add more recommended clubs based on the survey answers\n      ];\n      setClubs(recommendedClubs);\n      setShowSurvey(false); // Hide the survey after submission\n    } else {\n      alert(\"Please Provide Three Interests\");\n      return;\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigation isLoggedIn={isLoggedIn} onLogout={handleLogout} />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          {isLoggedIn && <Route path=\"/account_dashboard\" element={<Dashboard />} />}\n          {/* Render \"Account Dashboard\" route only if user is logged in */}\n          <Route path=\"/club_registration\" element={<ClubManagement />} />\n          <Route path=\"/user_registration\" element={<UserManagement onLogin={handleLogin} onUserRegistration={handleUserRegistration} />} />\n          {/* Pass the handleUserRegistration function to the UserManagement component */}\n          <Route path=\"/club_matching_survey\" element={<Survey onSurveySubmit={handleSurveySubmit} />} />\n          {isLoggedIn && (\n            <Route path=\"/account_management\" element={<Database userData={userData} />} />\n          )}\n          {/* Render \"Account Management\" route only if user is logged in */}\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}