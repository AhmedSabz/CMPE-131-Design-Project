{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishi\\\\SJSU\\\\3rd Year (Spring Semester)\\\\CMPE 131\\\\Club Matching Website\\\\club-matching-website\\\\src\\\\components\\\\Database.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Database = () => {\n  _s();\n  // Retrieve user data from localStorage or initialize with an empty array\n  const [users, setUsers] = useState(() => {\n    const storedUsers = localStorage.getItem('users');\n    return storedUsers ? JSON.parse(storedUsers) : [];\n  });\n\n  // Retrieve club data from localStorage or initialize with an empty array\n  const [clubs, setClubs] = useState(() => {\n    const storedClubs = localStorage.getItem('clubs');\n    return storedClubs ? JSON.parse(storedClubs) : [];\n  });\n\n  // Function to handle user registration\n  const registerUser = (username, password, additionalCredentials) => {\n    // Add the new user to the users state\n    const newUser = {\n      username,\n      password,\n      additionalCredentials\n    };\n    setUsers(prevUsers => [...prevUsers, newUser]);\n\n    // Store updated user data in localStorage\n    localStorage.setItem('users', JSON.stringify([...users, newUser]));\n  };\n\n  // Function to handle club registration\n  const registerClub = (clubname, password, additionalCredentials) => {\n    // Add the new club to the clubs state\n    const newClub = {\n      clubname,\n      password,\n      additionalCredentials\n    };\n    setClubs(prevClubs => [...prevClubs, newClub]);\n\n    // Store updated club data in localStorage\n    localStorage.setItem('clubs', JSON.stringify([...clubs, newClub]));\n  };\n  useEffect(() => {\n    // Update localStorage whenever users or clubs state changes\n    localStorage.setItem('users', JSON.stringify(users));\n    localStorage.setItem('clubs', JSON.stringify(clubs));\n  }, [users, clubs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Username: \", user.username, \", Password: \", user.password, \", Additional Credentials: \", user.additionalCredentials]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Clubs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clubs.map((club, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Club Name: \", club.clubname, \", Password: \", club.password, \", Additional Credentials: \", club.additionalCredentials]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Database, \"XOPybNSZCX8RFvXUGruOca9HVUE=\");\n_c = Database;\nexport default Database;\nvar _c;\n$RefreshReg$(_c, \"Database\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Database","_s","users","setUsers","storedUsers","localStorage","getItem","JSON","parse","clubs","setClubs","storedClubs","registerUser","username","password","additionalCredentials","newUser","prevUsers","setItem","stringify","registerClub","clubname","newClub","prevClubs","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","index","club","_c","$RefreshReg$"],"sources":["C:/Users/rishi/SJSU/3rd Year (Spring Semester)/CMPE 131/Club Matching Website/club-matching-website/src/components/Database.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Database = () => {\r\n  // Retrieve user data from localStorage or initialize with an empty array\r\n  const [users, setUsers] = useState(() => {\r\n    const storedUsers = localStorage.getItem('users');\r\n    return storedUsers ? JSON.parse(storedUsers) : [];\r\n  });\r\n\r\n  // Retrieve club data from localStorage or initialize with an empty array\r\n  const [clubs, setClubs] = useState(() => {\r\n    const storedClubs = localStorage.getItem('clubs');\r\n    return storedClubs ? JSON.parse(storedClubs) : [];\r\n  });\r\n\r\n  // Function to handle user registration\r\n  const registerUser = (username, password, additionalCredentials) => {\r\n    // Add the new user to the users state\r\n    const newUser = { username, password, additionalCredentials };\r\n    setUsers(prevUsers => [...prevUsers, newUser]);\r\n\r\n    // Store updated user data in localStorage\r\n    localStorage.setItem('users', JSON.stringify([...users, newUser]));\r\n  };\r\n\r\n  // Function to handle club registration\r\n  const registerClub = (clubname, password, additionalCredentials) => {\r\n    // Add the new club to the clubs state\r\n    const newClub = { clubname, password, additionalCredentials };\r\n    setClubs(prevClubs => [...prevClubs, newClub]);\r\n\r\n    // Store updated club data in localStorage\r\n    localStorage.setItem('clubs', JSON.stringify([...clubs, newClub]));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Update localStorage whenever users or clubs state changes\r\n    localStorage.setItem('users', JSON.stringify(users));\r\n    localStorage.setItem('clubs', JSON.stringify(clubs));\r\n  }, [users, clubs]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Database</h2>\r\n      <h3>Users</h3>\r\n      <ul>\r\n        {users.map((user, index) => (\r\n          <li key={index}>\r\n            Username: {user.username}, Password: {user.password}, Additional Credentials: {user.additionalCredentials}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h3>Clubs</h3>\r\n      <ul>\r\n        {clubs.map((club, index) => (\r\n          <li key={index}>\r\n            Club Name: {club.clubname}, Password: {club.password}, Additional Credentials: {club.additionalCredentials}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Database;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}